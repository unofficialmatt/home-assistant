#######################################################
#                                                     #
#                 PACKAGES / LIGHTING                 #
#                                                     #
#######################################################

homeassistant:
  customize_glob:
    "automation.lights_*":
      icon: mdi:lightbulb-group

  customize_domain:
    light:
      icon: mdi:ceiling-light

  customize:

    light.all_hue_lights:
      hidden: true
      homebridge_hidden: true
    light.bedroom_entertainment_area:
      hidden: true
      homebridge_hidden: true
    light.dining_room:
      homebridge_hidden: true
      icon: mdi:silverware-variant
    light.dining_room_lamp:
      icon: mdi:floor-lamp
    light.man_cave:
      homebridge_hidden: true
      icon: mdi:guitar-electric
    light.man_cave_all:
      homebridge_hidden: true
      icon: mdi:guitar-electric
    light.man_cave_opihr:
      icon: mdi:bottle-tonic-outline
    light.man_cave_sovereign:
      icon: mdi:bottle-tonic-outline
    light.matt_desk:
      supported_features: 191
    light.hallway:
      homebridge_hidden: true
      icon: mdi:stairs
    light.hue_go:
      icon: mdi:circle
    light.kitchen:
      homebridge_hidden: true
      icon: mdi:fridge
    light.landing:
      homebridge_hidden: true
      icon: mdi:stairs
    light.lounge:
      homebridge_hidden: true
      icon: mdi:sofa
    light.lounge_lamp:
      icon: mdi:lamp
    light.master_bedroom:
      homebridge_hidden: true
      icon: mdi:hotel
    light.master_bedroom_lightstrip:
      icon: mdi:led-strip
    light.matt_desk:
      icon: mdi:led-strip
    light.office:
      homebridge_hidden: true
      icon: mdi:desktop-mac
    light.office_lamp:
      icon: mdi:lamp

    switch.fairy_lights:
      icon: mdi:star
      friendly_name: Fairy Lights
    switch.star_lamp:
      icon: mdi:lamp
      friendly_name: Star Lamp

#######################################################
#                                                     #
#                     INTEGRATIONS                    #
#                                                     #
#######################################################

hue:
  bridges:
    - host: !secret ip_hue_hub
      allow_unreachable: true
      allow_hue_groups: true

#######################################################
#                                                     #
#                        GROUP                        #
#                                                     #
#######################################################

light:
  - platform: group
    name: Man Cave All
    entities:
      - light.man_cave
      - light.matt_desk
group:
  all_lights:
    name: All Lights
    entities:
      - light.dining_room
      - light.man_cave_all
      - light.hallway
      - light.kitchen
      - light.landing
      - light.lounge
      - light.master_bedroom
      - light.office
      - light.porch

#######################################################
#                                                     #
#                     AUTOMATIONS                     #
#                                                     #
#######################################################

automation:
  # TURN ALL LIGHTS OFF IF IT IS LIGHT ENOUGH
  - alias: Lights - OFF When Light
    trigger:
      - platform: numeric_state
        entity_id: sensor.sunlight_pct
        above: 35
    condition:
      condition: and
      conditions:
        - condition: state
          entity_id: group.all_lights
          state: 'on'
        - condition: time
          after: '09:00:00'
    action:
      - service: light.turn_off
        entity_id: group.all_lights
      - service: script.tts_engine
        data_template:
          call_no_signoff: 1
          tts_message: >
            {{ [
              "There's plenty of light coming into the house so I'm turning the lights off.",
              "I'm turning the lights off - I hope that's OK.",
              "Save the planet! I'm turning the lights off.",
              "It's daytime now so I'll turn the lights off.",
              "My sensors are telling me that it's light enough without the lights on. I'll turn them off.",
              "I'm going to turn the lights off now. Hash tag save the planet.",
              ] | random }}


  # TURN THE DOWNSTAIRS LIGHTS ON BETWEEN 2100-0500 IF ANYONE ARRIVES HOME, AND THE HOUSE LIGHTS ARE CURRENTLY OFF
  - alias: Lights - ON Late Home
    trigger:
      - platform: state
        entity_id: person.matt, person.sarah
        to: 'home'
    condition:
      condition: and
      conditions:
        - condition: time
          after: '21:00:00'
          before: '05:00:00'
        - condition: sun
          after: sunset
          after_offset: "-00:45:00"
        - condition: state
          entity_id: group.all_lights
          state: 'off'
    action:
      - service: input_select.select_option
        data:
          entity_id: input_select.scene_dining_room
          option: "Dimmed"
      - service: scene.turn_on
        entity_id: scene.hallway_dimmed
      - delay: '00:10:00'
      - service: light.turn_off
        entity_id: group.all_lights

  # LIGHTS ON WHEN LOW LIGHT
  - alias: Lights - ON Low Light
    trigger:
      - platform: numeric_state
        entity_id: sensor.sunlight_pct
        below: 20
      - platform: state
        entity_id: input_select.home_status
        to: "Home"
    condition:
      condition: and
      conditions:
        - condition: state
          entity_id: input_select.home_status
          state: "Home"
        - condition: numeric_state
          entity_id: sensor.sunlight_pct
          below: 20
        - condition: time
          after: '13:00:00'
    action:
      - service: script.tts_engine
        data_template:
          tts_message: >
            {{ [
              "It's getting dark out so I am turning on the lights.",
              "The darkness is coming. I'll turn the lights on.",
              "It will be dark soon. I'll turn the lights on.",
              "Darkness is descending. Time for me to turn the lights on.",
              "I'm struggling to see you! I'll turn the lights on.",
              "Darkness is nearly upon us. Let me turn the lights on.",
              "My sensors tell me that it's dark out. I'll turn the lights on.",
              "And then there was light!",
              "Darkness descends. I'll turn on some lights.",
              "There goes the sun. Better turn on the lights.",
              "Light levels are low so I'll turn some lights on in the house.",
              ] | random }}
      - service: scene.turn_on
        entity_id: scene.hallway_dimmed
      - service: input_select.select_option
        data_template:
          entity_id: input_select.scene_lounge
          option: >
            {% if is_state('light.lounge', 'off') %}
              Relax
            {% else %}
              -
            {% endif %}
      - service: input_select.select_option
        data_template:
          entity_id: input_select.scene_dining_room
          option: >
            {% if is_state('light.dining_room', 'off') %}
              Relax
            {% else %}
              -
            {% endif %}
      # TURN OFFICE ON IF MATT IS IN THERE
      - service: input_select.select_option
        data_template:
          entity_id: input_select.scene_man_cave
          option: >
            {% if ( is_state('binary_sensor.matt_imac', 'on') or is_state('binary_sensor.matt_mbp', 'on')) and is_state('light.man_cave', 'off') %}
              Dimmed
            {% else %}
              -
            {% endif %}
      # TURN OFFICE ON IF SARAH IS IN THERE
      - service: input_select.select_option
        data_template:
          entity_id: input_select.scene_office
          option: >
            {% if ( is_state('binary_sensor.sarah_imac', 'on') and is_state('light.office', 'off') ) %}
              Dimmed
            {% else %}
              -
            {% endif %}

  - alias: Porch Light On Sunset and Sunrise
    trigger:
      - platform: numeric_state
        entity_id: sensor.sunlight_pct
        below: 20
      - platform: sun
        event: sunset
        offset: "-00:45:00"
      - platform: sun
        event: sunrise
        offset: "-00:45:00"
    condition:
      - condition: numeric_state
        entity_id: sensor.sunlight_pct
        below: 20
    action:
      - service: scene.turn_on
        entity_id: scene.porch_dimmed

  # TURN UP PORCH LIGHT IF SOMEONE ARRIVES HOME
  - alias: Porch Light Bright Arrive Home
    trigger:
      - platform: state
        entity_id: person.matt, person.sarah
        to: 'home'
    condition:
      condition: and
      conditions:
        - condition: state
          entity_id: light.porch
          state: 'on'
        - condition: numeric_state
          entity_id: sensor.sunlight_pct
          below: 20
    action:
      - service: scene.turn_on
        entity_id: scene.porch_bright
      - delay: '00:05:00'
      - service: scene.turn_on
        entity_id: scene.porch_dimmed

