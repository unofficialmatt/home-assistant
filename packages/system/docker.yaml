#######################################################
#                                                     #
#                  PACKAGES / DOCKER                  #
#                                                     #
#######################################################

homeassistant:
  customize:
    switch.transmission_vpn:
      icon: mdi:download
    switch.plex:
      icon: mdi:plex
    switch.ha_dockermon:
      icon: mdi:eye
    switch.sonarr:
      icon: mdi:television
    switch.jackett:
      icon: mdi:playlist-star
    switch.lazy_librarian:
      icon: mdi:book
    switch.ombi:
      icon: mdi:hand-right
    switch.radarr:
      icon: mdi:filmstrip
    switch.sabnzbd:
      icon: mdi:download
    switch.traefik:
      icon: mdi:lan-pending
    switch.portainer:
      icon: mdi:docker
    automation.docker_container_down_notify:
      icon: mdi:docker

#######################################################
#                                                     #
#                       SWITCH                        #
#                                                     #
#######################################################

## DOCKER CONTAINERS EXPOSED AS SWITCHES
## @link https://philhawthorne.com/ha-dockermon-use-home-assistant-to-monitor-start-or-stop-docker-containers/

switch:
  - platform: rest
    resource: !secret dockermon_transmission
    name: Transmission-VPN
    body_on: '{"state": "start"}'
    body_off: '{"state": "stop"}'
    is_on_template: '{{ value_json is not none and value_json.state == "running" }}'
    username: !secret dockermon_user
    password: !secret dockermon_password
  - platform: rest
    resource: !secret dockermon_plex
    name: Plex
    body_on: '{"state": "start"}'
    body_off: '{"state": "stop"}'
    is_on_template: '{{ value_json is not none and value_json.state == "running" }}'
    username: !secret dockermon_user
    password: !secret dockermon_password
  - platform: rest
    resource: !secret dockermon_ha_dockermon
    name: HA Dockermon
    body_on: '{"state": "start"}'
    body_off: '{"state": "stop"}'
    is_on_template: '{{ value_json is not none and value_json.state == "running" }}'
    username: !secret dockermon_user
    password: !secret dockermon_password
  - platform: rest
    resource: !secret dockermon_sonarr
    name: Sonarr
    body_on: '{"state": "start"}'
    body_off: '{"state": "stop"}'
    is_on_template: '{{ value_json is not none and value_json.state == "running" }}'
    username: !secret dockermon_user
    password: !secret dockermon_password
  - platform: rest
    resource: !secret dockermon_jackett
    name: Jackett
    body_on: '{"state": "start"}'
    body_off: '{"state": "stop"}'
    is_on_template: '{{ value_json is not none and value_json.state == "running" }}'
    username: !secret dockermon_user
    password: !secret dockermon_password
  - platform: rest
    resource: !secret dockermon_lazylibrarian
    name: Lazy Librarian
    body_on: '{"state": "start"}'
    body_off: '{"state": "stop"}'
    is_on_template: '{{ value_json is not none and value_json.state == "running" }}'
    username: !secret dockermon_user
    password: !secret dockermon_password
  - platform: rest
    resource: !secret dockermon_ombi
    name: Ombi
    body_on: '{"state": "start"}'
    body_off: '{"state": "stop"}'
    is_on_template: '{{ value_json is not none and value_json.state == "running" }}'
    username: !secret dockermon_user
    password: !secret dockermon_password
  - platform: rest
    resource: !secret dockermon_radarr
    name: Radarr
    body_on: '{"state": "start"}'
    body_off: '{"state": "stop"}'
    is_on_template: '{{ value_json is not none and value_json.state == "running" }}'
    username: !secret dockermon_user
    password: !secret dockermon_password
  - platform: rest
    resource: !secret dockermon_sabnzbd
    name: SABnzbd
    body_on: '{"state": "start"}'
    body_off: '{"state": "stop"}'
    is_on_template: '{{ value_json is not none and value_json.state == "running" }}'
    username: !secret dockermon_user
    password: !secret dockermon_password
  - platform: rest
    resource: !secret dockermon_traefik
    name: Traefik
    body_on: '{"state": "start"}'
    body_off: '{"state": "stop"}'
    is_on_template: '{{ value_json is not none and value_json.state == "running" }}'
    username: !secret dockermon_user
    password: !secret dockermon_password
  - platform: rest
    resource: !secret dockermon_portainer
    name: Portainer
    body_on: '{"state": "start"}'
    body_off: '{"state": "stop"}'
    is_on_template: '{{ value_json is not none and value_json.state == "running" }}'
    username: !secret dockermon_user
    password: !secret dockermon_password

#######################################################
#                                                     #
#                     AUTOMATIONS                     #
#                                                     #
#######################################################

automation:
  ## NOTIFY IF ANY DOCKER CONTAINERS GO DOWN FOR FIVE MINUTES
  - alias: Docker Container Down - Notify
    initial_state: 'on'
    trigger:
      - platform: state
        entity_id: switch.transmission_vpn, switch.plex, switch.ha_dockermon, switch.sonarr, switch.jackett, switch.lazy_librarian, switch.ombi, switch.radarr, switch.sabnzbd, switch.traefik, switch.portainer
        to: 'off'
        for:
          minutes: 5
    action:
      - service: notify.matt
        data_template:
          message: 'Docker Container {{ trigger.to_state.name }} is not running. Please check the status of this container as some features may stop functioning.'
          title: >
            {{ "\u26A0\uFE0F" }} Container Alert
      - service: persistent_notification.create
        data_template:
          notification_id: offline_container
          title: >
            {{ "\u26A0\uFE0F" }} Container Offline
          message: >
            Docker Container {{ trigger.to_state.name }} is not running. Please check the status of this container as some features may stop functioning.
