#######################################################
#                                                     #
#                 PACKAGES / LIGHTING                 #
#                                                     #
#######################################################

homeassistant:
  customize_glob:
    "automation.lights_*":
      icon: mdi:lightbulb-group

  customize_domain:
    light:
      icon: mdi:ceiling-light

  customize:

    light.all_hue_lights:
      hidden: true
      homebridge_hidden: true
    light.bedroom_entertainment_area:
      hidden: true
      homebridge_hidden: true
    light.dining_room:
      homebridge_hidden: true
      icon: mdi:silverware-variant
    light.dining_room_lamp:
      icon: mdi:floor-lamp
    light.guest_bedroom:
      homebridge_hidden: true
      icon: mdi:hotel
    light.guest_bedroom_opihr:
      icon: mdi:lamp
    light.guest_bedroom_sovereign:
      icon: mdi:lamp
    light.hallway:
      homebridge_hidden: true
      icon: mdi:stairs
    light.hue_go:
      icon: mdi:circle
    light.kitchen:
      homebridge_hidden: true
      icon: mdi:fridge
    light.landing:
      homebridge_hidden: true
      icon: mdi:stairs
    light.lounge:
      homebridge_hidden: true
      icon: mdi:sofa
    light.lounge_lamp:
      icon: mdi:lamp
    light.master_bedroom:
      homebridge_hidden: true
      icon: mdi:hotel
    light.master_bedroom_lightstrip:
      icon: mdi:led-strip
    light.office:
      homebridge_hidden: true
      icon: mdi:desktop-mac
    light.office_lamp:
      icon: mdi:lamp

    switch.fairy_lights:
      icon: mdi:star
      friendly_name: Fairy Lights
    switch.star_lamp:
      icon: mdi:lamp
      friendly_name: Star Lamp

#######################################################
#                                                     #
#                     INTEGRATIONS                    #
#                                                     #
#######################################################

hue:
  bridges:
    - host: !secret ip_hue_hub
      allow_unreachable: true
      allow_hue_groups: true

#######################################################
#                                                     #
#                     AUTOMATIONS                     #
#                                                     #
#######################################################

automation:
  # TURN ALL LIGHTS OFF IN THE MORNING, IF IT IS LIGHT ENOUGH
  - alias: Lights - OFF Morning
    hide_entity: true
    trigger:
      - platform: time
        at: '10:00:00'
      - platform: time
        at: '11:00:00'
    condition:
      condition: and
      conditions:
        - condition: state
          entity_id: group.all_lights
          state: 'on'
        - condition: sun
          after: sunrise
    action:
      - service: light.turn_off
        entity_id: group.all_lights
      - service: script.tts_engine
        data_template:
          tts_message: >
            {{ [
              "There's plenty of light coming into the house so I'm turning the lights off.",
              "I'm turning the lights off - I hope that's OK.",
              "Save the planet! I'm turning the lights off.",
              "It's daytime now so I'll turn the lights off.",
              "My sensors are telling me that it's light enough without the lights on. I'll turn them off.",
              "I'm going to turn the lights off now. Hash tag save the planet.",
              ] | random }}
        

  # TURN THE DOWNSTAIRS LIGHTS ON BETWEEN 2100-0500 IF ANYONE ARRIVES HOME, AND THE HOUSE LIGHTS ARE CURRENTLY OFF
  - alias: Lights - ON Late Home
    hide_entity: true
    trigger:
      - platform: state
        entity_id: person.matt, person.sarah
        to: 'home'
    condition:
      condition: and
      conditions:
        - condition: time
          after: '21:00:00'
          before: '05:00:00'
        - condition: sun
          after: sunset
          after_offset: "-00:45:00"
        - condition: state
          entity_id: group.all_lights
          state: 'off'
    action:
      - service: input_select.select_option
        data:
          entity_id: input_select.scene_dining_room
          option: "Dimmed"
      - service: scene.turn_on
        entity_id: scene.hallway_dimmed
      - delay: '00:10:00'
      - service: light.turn_off
        entity_id: group.all_lights

  # STANDARD EVENING LIGHTS
  - alias: Lights - ON Early Evening
    hide_entity: true
    trigger:
      - platform: sun
        event: sunset
        offset: "-00:45:00"
      - platform: state
        entity_id: input_select.home_status
        to: "Home"
    condition:
      condition: and
      conditions:
        - condition: state
          entity_id: input_select.home_status
          state: "Home"
        - condition: sun
          after: sunset
          after_offset: "-00:45:00"
        - condition: time
          after: '15:00:00'
          before: '21:00:00'
    action:
      - service: script.tts_engine
        data_template:
          tts_message: >
            {{ [
              "It's getting dark out so I am turning on the lights.",
              "The dark night is coming. I'll turn the lights on.",
              "It will be night time soon. I'll turn the lights on.",
              "Darkness is descending. Time for me to turn the lights on.",
              "I'm struggling to see you! I'll turn the lights on.",
              "Nighttime is nearly upon us. Let me turn the lights on.",
              "My sensors tell me that it's dark out. I'll turn the lights on.",
              "And then there was light!",
              "Darkness descends. The night is drawing in. I'll turn on some lights.",
              "There goes the sun. Better turn on the lights."
              ] | random }}
      - service: switch.turn_on
        entity_id: switch.porch_light
      - service: input_select.select_option
        data:
          entity_id: input_select.scene_dining_room
          option: "Relax"
      - service: scene.turn_on
        entity_id: scene.hallway_dimmed
      - service: input_select.select_option
        data:
          entity_id: input_select.scene_lounge
          option: "Relax"
