#######################################################
#
#  This package contains components, sensor and
#  automations which are currently in a WIP state.
#
#
#######################################################

homeassistant:
  customize:
    binary_sensor.back_door:
      icon: mdi:door
    binary_sensor.front_door:
      icon: mdi:door

#sensor:
#  - platform: uk_transport
#    app_id: !secret uk_transport_id
#    app_key: !secret uk_transport_key
#    queries:
#      - mode: train
#        origin: SOU
#        destination: WIN


ios:
  push:
    categories:
      - name: Pre-Heat Home
        identifier: 'pre-heat-home'
        actions:
          - identifier: 'PREHEAT_YES'
            title: 'Yes'
            activationMode: 'background'
            authenticationRequired: false
          - identifier: 'PREHEAT_NO'
            title: 'No'
            activationMode: 'background'
            authenticationRequired: false

automation:

  - alias: Commute - Notify Sarah of ETA
  - alias: Automatic Theme Change
    initial_state: 'true'
    trigger:
      - platform: homeassistant
        event: start
      - platform: state
        entity_id: sun.sun
        to: above_horizon
      - platform: sun
        event: sunset
        offset: "+00:30:00"
    action:
      - service_template: frontend.set_theme
        data_template:
         name: >
           {% if states.sun.sun.state == "above_horizon" %}
             Google Light Theme
           {% else %}
             Google Dark Theme
           {% endif %}
          # name: >
          #   {% if states.sun.sun.state == "above_horizon" %}
          #     clear
          #   {% else %}
          #     clear-dark
          #   {% endif %}

    trigger:
      - platform: zone
        entity_id: person.matt
        zone: zone.matt_work
        event: leave
    condition:
      condition: and
      conditions:
        - condition: state
          entity_id: 'binary_sensor.workday_sensor'
          state: 'on'
        - condition: time
          after: '16:30:00'
        - condition: state
          entity_id: person.sarah
          state: home
    action:
      - service: notify.ios_sarah
        data_template:
          title: >
            {{ "\uD83D\uDE97" }} Matt has left Work
          message: >
            Matt has just left work.
            Traffic Conditions are
            {% if states.sensor.evening_commute.state <= "35" %} GREAT.
            {% elif states.sensor.evening_commute.state > "35" and states.sensor.evening_commute.state < "45" %} AVERAGE.
            {% elif states.sensor.evening_commute.state >= "45" %} BAD.
            {% endif %}
            His ETA is approx. {{ states.sensor.evening_commute.state }} minutes.

  - alias: Katt Entrance Music
    trigger:
      - platform: state
        entity_id: device_tracker.katt
        to: 'home'
    condition:
      condition: and
      conditions:
      - condition: state
        entity_id: input_select.bedtime_trigger
        state: 'Off'
      - condition: time
        after: '09:00:00'
        before: '22:00:00'
    action:
      - service: spotcast.start
        data:
          device_name: 'Downstairs'
          uri: 'spotify:track:60AtF9l5YTgVPgJFzA7AGo'

  - alias: Rob Entrance Music
    trigger:
      - platform: state
        entity_id: device_tracker.rob
        to: 'home'
    condition:
      condition: and
      conditions:
      - condition: state
        entity_id: input_select.bedtime_trigger
        state: 'Off'
      - condition: time
        after: '09:00:00'
        before: '22:00:00'
    action:
      - service: spotcast.start
        data:
          device_name: 'Downstairs'
          uri: 'spotify:track:6nVijDYMA3KaBGdWabaLvm'



  # Starts playing Spotify on my phone at 8:15 on workdays
  - alias: "Commute Start Spotify"
    hide_entity: true
    trigger:
      platform: time
      at: '08:15:00'
    condition:
      condition: and
      conditions:
        - condition: state
          entity_id: 'binary_sensor.workday_sensor'
          state: 'on'
        - condition: state
          entity_id: person.matt
          state: 'home'
        - condition: state
          entity_id: input_boolean.alarm_clock
          state: 'on'
    action:
      - service: media_player.select_source
        entity_id: media_player.spotify
        data:
          source: "Matt's iPhone 8+"
      - service: media_player.shuffle_set
        data:
         entity_id: media_player.spotify
         shuffle: false
  - alias: 'Notify of Sonarr / Radarr activity'
    trigger:
      - platform: template
        value_template: '{{ states.persistent_notification.notification.attributes.title == "Sonarr" }}'
      - platform: template
        value_template: '{{ states.persistent_notification.notification.attributes.title == "Radarr" }}'
    action:
      - service: notify.all_phones
        data_template:
          title: 'Incoming Media'
          message: '{{ "\uD83C\uDFAC" }} {{ states.persistent_notification.notification.attributes.message }}'
      - service: persistent_notification.dismiss
        data_template:
          notification_id: "{{ trigger.to_state.attributes.object_id }}"

  - alias: "Pre-heat home"
    trigger:
      - platform: zone
        entity_id: person.sarah
        zone: zone.sarah_work
        event: leave
    condition:
      condition: and
      conditions:
        - condition: state
          entity_id: 'binary_sensor.workday_sensor'
          state: 'on'
        - condition: time
          after: '15:30:00'
        - condition: numeric_state
          entity_id: sensor.average_home_temperature
          below: 16
    action:
      - service: notify.ios_matt
        data_template:
          title: >
            {{ "\uD83C\uDF21" }} It's a little chilly at home
          message: "Hi Sarah, it's currently {{ states.sensor.average_home_temperature.state }}°C at home. Would you like me to pre-heat the house?"
          data:
            push:
              category: "pre-heat-home"

  # climate.set_operation_mode doesn't appear to be working here...
  - alias: "Pre-heat home YES"
    trigger:
      platform: event
      event_type: ios.notification_action_fired
      event_data:
        actionName: PREHEAT_YES
    action:
      - service: notify.ios_matt
        data_template:
          message: >
            {{ "\uD83C\uDF21" }} OK, I've turned the thermostat on. See you soon.
      - service: climate.set_hvac_mode
        data:
          entity_id: climate.hallway
          operation_mode: heat_cool
      - service: climate.set_temperature
        data:
          entity_id: climate.hallway
          temperature: 20


# for huesensor component
#sensor:
#  - platform: template
#    sensors:
#      kitchen_temperature:
#       value_template: '{{ states.sensor.kitchen_motion_sensor.attributes["temperature"] }}'
#        friendly_name: 'Kitchen Temperature'
#        unit_of_measurement: '°C'
#      landing_temperature:
#        value_template: '{{ states.sensor.landing_motion_sensor.attributes["temperature"] }}'
#        friendly_name: 'Landing Temperature'
#        unit_of_measurement: '°C'
#      kitchen_humidity:
#        value_template: '{{ states.sensor.kitchen_motion_sensor.attributes["humidity"] }}'
#        friendly_name: 'Kitchen Humidity'
#        unit_of_measurement: '%'
#      landing_humidity:
#        value_template: '{{ states.sensor.landing_motion_sensor.attributes["humidity"] }}'
#        friendly_name: 'Landing Humidity'
#        unit_of_measurement: '%'


  # Turn on the Lounge lights with the TV when it's dark out
  #- alias: 'Scene - Lounge Evening'
  #  hide_entity: true
  #  trigger:
  #  - platform: state
  #    entity_id: media_player.philips_tv
  #    to: 'on'
  #    from: 'off'
  #  condition:
  #  - condition: numeric_state
  #    entity_id: sensor.outside_light_level
  #    below: 5.0
  #  action:
  #  - service: input_select.select_option
  #    data:
  #      entity_id: input_select.scene_lounge
  #      option: "Relax"



### TAKE A LOOK AT THE CONDITION - SEEMS TO KNOW IF AUTOMATION AHS FIRED IN LAST HOUR..

#automation:
#  ## NOTIFY IF ANY DOCKER CONTAINERS GO DOWN FOR FIVE MINUTES
#  - alias: Docker Container Down - Notify
#    initial_state: 'on'
#    trigger:
#      - platform: state
#        entity_id: switch.transmission_vpn, switch.plex, switch.ha_dockermon, switch.sonarr, switch.jackett, switch.lazy_librarian, switch.ombi, switch.radarr, switch.sabnzbd, switch.traefik, switch.portainer
#        to: 'off'
#        for:
#          minutes: 5
#    #condition:
#    #  condition: and
#    #  conditions:
#    #    # Only send this once per hour
#    #    - condition: template
#    #      value_template: >
#    #        {% if automation.docker_container_down_notify.last_triggered is not none %}
#    #          {% if as_timestamp(now()) | int   -  as_timestamp(states.automation.docker_container_down_notify.attributes.last_triggered) | int > 3600 %} true {% else %} false
#    #          {% endif %}
#    #        {% else %}
#    #        false
#    #        {% endif %}
#    action:
#      - service: notify.matt
#        data_template:
#          message: 'Docker Container {{ trigger.to_state.name }} is not running. Please check the status of this container as some features may stop functioning.'
#          title: >
#            {{ "\u26A0\uFE0F" }} Container Alert
#      - service: persistent_notification.create
#        data_template:
#          notification_id: offline_container
#          title: >
#            {{ "\u26A0\uFE0F" }} Container Offline
#          message: >
#            Docker Container {{ trigger.to_state.name }} is not running. Please check the status of this container as some features may stop functioning.
#
