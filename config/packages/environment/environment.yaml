homeassistant:
  customize:
    climate.hallway:
      friendly_name: Thermostat
      entity_picture: /local/nest.png
    sensor.hallway_thermostat_humidity:
      friendly_name: Humidity
      icon: mdi:water
    sensor.hallway_thermostat_temperature:
      friendly_name: Hallway Temperature
    sensor.hallway_thermostat_operation_mode:
      icon: mdi:settings-box
    binary_sensor.is_workday_tomorrow:
      hidden: true
    binary_sensor.workday_sensor:
      hidden: true

    sensor.average_home_temperature:
      icon: mdi:thermometer
    sensor.time_of_day:
      icon: mdi:calendar-clock

  customize_glob:
    "binary_sensor.*workday*":
      icon: mdi:calendar-outline


nest:
  client_id: !secret nest_client_id
  client_secret: !secret nest_client_secret

sun:

binary_sensor:
  - platform: workday
    country: UK
  - platform: workday
    name: Is Workday Tomorrow
    country: UK
    days_offset: 1

sensor:
  # CURRENT TIME
  - platform: time_date
    display_options:
      - 'time'
      - 'date'
  # AVERAGE HOME TEMP
  - platform: min_max
    name: Average Home Temperature
    type: mean
    entity_ids:
      - sensor.hallway_thermostat_temperature
      - sensor.kitchen_temperature
      - sensor.landing_temperature
  # SO THAT SARAH CAN HOWL AT THE MOON
  - platform: moon

  ## COMPUTED LIGHT LEVEL
  # @link https://community.home-assistant.io/t/virtual-light-sensor/31975/16
  - platform: template
    sensors:
      sunlight_pct:
        entity_id:
          - sun.sun
          - sensor.darksky_cloud_coverage
        value_template: >-
          {%- set elevation = state_attr('sun.sun','elevation') | float %}
          {%- set cloud_coverage = states('sensor.darksky_cloud_coverage') | float %}
          {%- set cloud_factor = (1 - (0.75 * ( cloud_coverage / 100) ** 3 )) %}
          {%- set min_elevation = -6 %}
          {%- set max_elevation = 64 %}
          {%- set adjusted_elevation = elevation - min_elevation %}
          {%- set adjusted_elevation = [adjusted_elevation,0] | max %}
          {%- set adjusted_elevation = [adjusted_elevation,max_elevation - min_elevation] | min %}
          {%- set adjusted_elevation = adjusted_elevation / (max_elevation - min_elevation) %}
          {%- set adjusted_elevation = adjusted_elevation %}
          {%- set adjusted_elevation = adjusted_elevation * 100 %}
          {%- set brightness = adjusted_elevation * cloud_factor %}
          {{ brightness | round }}
        unit_of_measurement: '%'
        device_class: 'illuminance'
